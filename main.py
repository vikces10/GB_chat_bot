import asyncio
import config
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
import logging
from aiogram import types
import random
from keyboards import keyboard
from fox import fox
from fox import get_ip
from fox import coin


#–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=config.token)
dp = Dispatcher()


@dp.message(Command(commands=['start']))
async def start(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!', reply_markup=keyboard)

@dp.message(Command(commands=['–õ–∏—Å–∞']))
async def user(message: types.Message):
    img_fox = fox()
    await message.answer('–õ–æ–≤–∏ –ª–∏—Å—É')
    await message.answer_photo(img_fox)
    # img_fox = fox()
    # await bot.send_photo(message.from_user.id, img_fox)

@dp.message(Command(commands=['ip']))
async def id(message: types.Message):
    ip_address = get_ip()
    await message.answer(f'–í–∞—à IP: {ip_address}')

@dp.message(Command(commands=['—á–∏—Å–ª–æ']))
async def info(message: types.Message):
    number = random.randint(a=0, b=100)
    await message.answer(f'–¢–≤–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100: {number}!')

@dp.message(Command(commands=['BTC']))
async def coin_handler(message: types.Message):
    btc_price = coin()
    await message.answer(f'–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ {btc_price}')


@dp.message(Command(commands=['–∏–≥—Ä–∞']))
async def game(message: types.Message):
    await message.answer(f'{message.from_user.full_name}, –¥–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º! –ó–∞–¥—É–º–∞–π —á–∏—Å–ª–æ –∏–∑ –¥–≤—É—Ö —Ü–∏—Ñ—Ä')
    await asyncio.sleep(7)
    await message.answer('–ü—Ä–∏–±–∞–≤—å –∫ –Ω–µ–º—É 7')
    await asyncio.sleep(5)
    await message.answer('–û—Ç 110 –æ—Ç–Ω–∏–º–∏ –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Å—É–º–º—É')
    await asyncio.sleep(15)
    await message.answer('–ö –æ—Ç–≤–µ—Ç—É –ø—Ä–∏–±–∞–≤—å 15 ')
    await asyncio.sleep(10)
    await message.answer('–ü—Ä–∏–±–∞–≤—å –∑–∞–¥—É–º–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ')
    await asyncio.sleep(15)
    await message.answer('–ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ —Ä–∞–∑–¥–µ–ª–∏ –ø–æ–ø–æ–ª–∞–º')
    await asyncio.sleep(10)
    await message.answer('–û—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Ç–Ω–∏–º–∏ 9')
    await asyncio.sleep(5)
    await message.answer('–£–º–Ω–æ–∂—å –Ω–∞ 3')
    await asyncio.sleep(5)
    await message.answer('–¢–µ–ø–µ—Ä—å –≤–Ω–∏–º–∞–Ω–∏–µ! –¢–≤–æ–π –æ—Ç–≤–µ—Ç ....')
    await asyncio.sleep(5)
    await message.answer('150  –í–µ—Ä–Ω–æ? –¥–∞/–Ω–µ—Ç')


@dp.message(F.text.lower() == "—á–∏—Å–ª–æ")
async def number (message: types.Message):
    number = random.randint(a=0,b=100)
    await message.answer(f'–¢–≤–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100: {number}!')

@dp.message(F.text)
async def msg (message: types.Message):
    if "–ø—Ä–∏–≤–µ—Ç" in message.text.lower():
        await message.reply('–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç!')
    elif "–∫–∞–∫ –¥–µ–ª–∞" in message.text.lower():
        await message.reply('–ù–æ—Ä–º–∞–ª—å–Ω–æ, –∞ —É —Ç–µ–±—è?')
    elif "—Ö–æ—Ä–æ—à–æ" in message.text.lower():
        await message.reply('–†–∞–¥ –∑–∞ —Ç–µ–±—è!')
    elif "–æ–∫" in message.text.lower():
        await message.reply('–†–∞–¥ —ç—Ç–æ —Å–ª—ã—à–∞—Ç—å!')
    elif "–æ—Ç–ª–∏—á–Ω–æ" in message.text.lower():
        await message.reply('–ö–ª–∞—Å—Å!')
    elif "–ø–ª–æ—Ö–æ" in message.text.lower():
        await message.reply('–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –≤—Å–µ –Ω–∞–ª–∞–¥–∏—Ç—Å—è!')
    elif "–¥–∞" in message.text.lower():
        await message.answer('–í–æ—Ç —Ç–∞–∫–æ–π —Ñ–æ–∫—É—Å üòâ ')
    elif "–Ω–µ—Ç" in message.text.lower():
        await message.answer('–í–æ–∑–º–æ–∂–Ω–æ –∑–∞–∫—Ä–∞–ª–∞—Å—å –æ—à–∏–±–∫–∞ –≤ —Ç–≤–æ–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏—è—Ö üôÑ –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑! ')
    else:
        await message.reply('–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è...')



async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
