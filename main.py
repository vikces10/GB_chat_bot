import asyncio
import config
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
import logging
from aiogram import types
import random
from keyboards import keyboard

#–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=config.token)
dp = Dispatcher()


@dp.message(Command(commands=['start']))
async def start(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!', reply_markup=keyboard)

@dp.message(Command(commands=['user']))
async def user(message: types.Message):
    await message.answer(f'–í–∞—à username: {message.from_user.username}.')

@dp.message(Command(commands=['id']))
async def id(message: types.Message):
    await message.answer(f'–í–∞—à ID: {message.from_user.id}')

@dp.message(Command(commands=['info']))
async def info(message: types.Message):
    await message.answer("–Ø –±–æ—Ç - —Ç–≤–æ–π –¥—Ä—É–≥ –∏ —Ç–æ–≤–∞—Ä–∏—â üòä")

@dp.message(Command(commands=['joke']))
async def joke(message: types.Message):
    await message.answer("–ê–Ω–µ–∫–¥–æ—Ç: –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—É—á–∏–ª–∞—Å—å –ø–ª–æ—Ö–æ–π, –∞ —Å—Ä–æ–∫–∏ –≥–æ—Ä—è—Ç, –∏ –∑–∞–∫–∞–∑—á–∏–∫ —Ä—É–≥–∞–µ—Ç—Å—è! –ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å, —Å–º–µ–ª–æ –≤—ã–ø—É—Å–∫–∞–π—Ç–µ —Ä–µ–ª–∏–∑. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∑–æ–≤–∏—Ç–µ –µ–≥–æ –≤–µ—Ä—Å–∏–µ–π 1.0. üòÇüòÇüòÇ")

@dp.message(Command(commands=['stop']))
async def stop(message: types.Message):
    await message.answer(f'–ü–æ–∫–∞, {message.from_user.full_name}!')


@dp.message(F.text.lower() == "—á–∏—Å–ª–æ")
async def number (message: types.Message):
    number = random.randint(a=0,b=100)
    await message.answer(f'–¢–≤–æ–µ —á–∏—Å–ª–æ {number}!')

@dp.message(F.text)
async def msg (message: types.Message):
    if "–ø—Ä–∏–≤–µ—Ç" in message.text.lower():
        await message.reply('–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç!')
    elif "–∫–∞–∫ –¥–µ–ª–∞" in message.text.lower():
        await message.reply('–ù–æ—Ä–º–∞–ª—å–Ω–æ, –∞ —É —Ç–µ–±—è?')
    elif "—Ö–æ—Ä–æ—à–æ" in message.text.lower():
        await message.reply('–†–∞–¥ –∑–∞ —Ç–µ–±—è!')
    elif "–æ–∫" in message.text.lower():
        await message.reply('–†–∞–¥ —ç—Ç–æ —Å–ª—ã—à–∞—Ç—å!')
    elif "–æ—Ç–ª–∏—á–Ω–æ" in message.text.lower():
        await message.reply('–ö–ª–∞—Å—Å!')
    elif "–ø–ª–æ—Ö–æ" in message.text.lower():
        await message.reply('–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –≤—Å–µ –Ω–∞–ª–∞–¥–∏—Ç—Å—è!')
    else:
        await message.reply('–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è...')


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())

