import asyncio
import config
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
import logging
from aiogram import filters as F
import random

#–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=config.token)
dp = Dispatcher()


@dp.message(Command(commands=['start']))
async def start(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!')

@dp.message(Command(commands=['user']))
async def user(message: types.Message):
    await message.answer(f'–í–∞—à username: {message.from_user.username}.')

@dp.message(Command(commands=['id']))
async def id(message: types.Message):
    await message.answer(f'–í–∞—à ID: {message.from_user.id}')

@dp.message(Command(commands=['info']))
async def info(message: types.Message):
    await message.answer("–Ø –±–æ—Ç - —Ç–≤–æ–π –¥—Ä—É–≥ –∏ —Ç–æ–≤–∞—Ä–∏—â üòä")

@dp.message(Command(commands=['joke']))
async def joke(message: types.Message):
    await message.answer("–ê–Ω–µ–∫–¥–æ—Ç: –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—É—á–∏–ª–∞—Å—å –ø–ª–æ—Ö–æ–π, –∞ —Å—Ä–æ–∫–∏ –≥–æ—Ä—è—Ç, –∏ –∑–∞–∫–∞–∑—á–∏–∫ —Ä—É–≥–∞–µ—Ç—Å—è! –ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å, —Å–º–µ–ª–æ –≤—ã–ø—É—Å–∫–∞–π—Ç–µ —Ä–µ–ª–∏–∑. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∑–æ–≤–∏—Ç–µ –µ–≥–æ –≤–µ—Ä—Å–∏–µ–π 1.0. üòÇüòÇüòÇ")

@dp.message(Command(commands=['stop']))
async def stop(message: types.Message):
    await message.answer(f'–ü–æ–∫–∞, {message.from_user.full_name}!')

@dp.message(F.text)
async def msg_echo(message: types.Message):
    print(message.text)
    name=message.chat.first_name
    if'hello'in message.text.lower():
        await message.reply(f"–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç, {name}")
    if'by'in message.text.lower():
        await message.reply(f"–ü–æ–∫–∞, {name}")
    else:
        await message.reply(f"{name}, —è –í–∞—Å –Ω–µ –ø–æ–Ω—è–ª.")
async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
